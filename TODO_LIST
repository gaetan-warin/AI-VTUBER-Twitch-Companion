Step 1
    Merge twitch_lister.py directly inside the project instead of separate process, he's inside the folder listener as it's a separated process it should be imported from app.py and twitch_lister should be adapted to work with app.py, we should have ability to choose whitch lister should be launche from side bar ov avatar.html, see if the listener is on, possibily to live connect/disconnect. Then we have a patern to create more listener for other services if required. In technical listener config, with green or red dot for live. When clicking on it, we have CFG of this specific listener
    Speach to text to make Bot answer you directly,
    UI CFG => Activate/desactive Microphone
    UI CFG => Which micro to used
NEXT
    UI CFG => Which sound to play ? List from mp3 of static folder ? 
    UI CFG => what to say When sub or follow ? 
    UI CFG => Celebration on/off when sub and/or follow. Button to test animation
    UI CFG => Config react only on some word like a "Hey, Sarah !"
    UI CFG => Avatar load management
    UI CFG => Voice change management
    UI CFG => LLM Management extension (use Local or Cloud API LLM)


VERY NEXT
    Companio as an APP => Electron JS instead of Web Browser,
    Twitch => Regarding the person who send the message he should be able to manage to keep conversation or switch subject.
    Possibility to share screen ? How to ? Picture Each 3 sec, how to provide llm picture to make him answer on content ? Search on web ?